import { Container } from '@chakra-ui/react';
import { MongoClient } from 'mongodb';
import { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import MeetupList from '../components/meetup/MeetupList';

interface meetupPropsType {
  meetups: {
    id: string;
    title: string;
    image: string;
    description: string;
    createdAt: string;
  };
}

const HomePage: NextPage = (props: meetupPropsType) => {
  return (
    <>
      <Container maxW='container.sm'>
        <Head>
          <title>Create Next App</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>

        <MeetupList meetups={props.meetups} />
      </Container>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  // fetch data from api
  const client = await MongoClient.connect(
    'mongodb+srv://user-nineria:tUh1mj8hmOQLAM1N@cluster0.y5ii0.mongodb.net/meetups?retryWrites=true&w=majority'
  );

  const db = client.db();
  const meetupsCollection = db.collection('meetups');

  const meetups = await meetupsCollection.find().toArray();

  client.close();

  return {
    props: {
      meetups: meetups.map((meetup) => ({
        id: meetup._id.toString(),
        title: meetup.title,
        image: meetup.image,
        description: meetup.description,
        createdAt: parseFloat(meetup.createdAt),
      })),
    },
  };
};

// export const getStaticProps: GetStaticProps = async () => {
//   // fetch data from api
//   const client = await MongoClient.connect(
//     'mongodb+srv://user-nineria:tUh1mj8hmOQLAM1N@cluster0.y5ii0.mongodb.net/meetups?retryWrites=true&w=majority'
//   );

//   const db = client.db();
//   const meetupsCollection = db.collection('meetups');

//   const meetups = await meetupsCollection.find().toArray();

//   client.close();

//   return {
//     props: {
//       meetups: meetups.map((meetup) => ({
//         id: meetup._id.toString(),
//         title: meetup.title,
//         image: meetup.image,
//         description: meetup.description,
//         createdAt: parseFloat(meetup.createdAt),
//       })),
//     },
//     revalidate: 3,
//   };
// };

export default HomePage;
